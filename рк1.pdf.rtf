class OperatingSystem:
    def __init__(self, os_id, name):
        self.os_id = os_id
        self.name = name

class Computer:
    def __init__(self, computer_id, os_id, model, price):
        self.computer_id = computer_id
        self.os_id = os_id
        self.model = model
        self.price = price

class ComputersInDepartment:
    def __init__(self, computer_id, department_id):
        self.computer_id = computer_id
        self.department_id = department_id

# Создание тестовых данных
os_list = [
    OperatingSystem(1, "Windows"),
    OperatingSystem(2, "MacOS"),
    OperatingSystem(3, "Linux"),
]

computer_list = [
    Computer(1, 1, "Dell XPS", 1500),
    Computer(2, 1, "HP Pavilion", 1200),
    Computer(3, 2, "MacBook Pro", 2000),
    Computer(4, 3, "Lenovo ThinkPad", 1300),
    Computer(5, 3, "System76", 1400),
]

department_computers = [
    ComputersInDepartment(1, 1),
    ComputersInDepartment(2, 1),
    ComputersInDepartment(3, 2),
    ComputersInDepartment(4, 3),
    ComputersInDepartment(5, 3),
]

# Запросы
# 1. Вывести список всех связанных компьютеров и операционных систем, отсортированный по операционным системам.
sorted_computers_os = sorted(computer_list, key=lambda computer: computer.os_id)
for computer in sorted_computers_os:
    os = next((os.name for os in os_list if os.os_id == computer.os_id), None)
    print(f"Computer: {computer.model}, OS: {os}")

# 2. Вывести список операционных систем с суммарной стоимостью компьютеров на каждой системе.
os_prices = {}
for computer in computer_list:
    os_prices[computer.os_id] = os_prices.get(computer.os_id, 0) + computer.price

sorted_os_prices = sorted(os_prices.items(), key=lambda x: x[1], reverse=True)
for os_id, total_price in sorted_os_prices:
    os_name = next((os.name for os in os_list if os.os_id == os_id), None)
    print(f"OS: {os_name}, Total Price: {total_price}")

# 3. Вывести список всех операционных систем, у которых название содержит слово 'Windows',
#    и список компьютеров с соответствующими системами.
matching_os = [os for os in os_list if 'Windows' in os.name]
matching_computers = [computer for computer in computer_list if computer.os_id in [os.os_id for os in matching_os]]

print(f"Operating Systems containing 'Windows':")
for os in matching_os:
    print(os.name)

print(f"Computers with matching OS:")
for computer in matching_computers:
    print(f"Model: {computer.model}, OS: {next((os.name for os in os_list if os.os_id == computer.os_id), None)}")
 Вывод: 
Operating Systems containing 'Windows':
Windows
Computers with matching OS:
Model: Dell XPS, OS: Windows
Model: HP Pavilion, OS: Windows


...Program finished with exit code 0
Press ENTER to exit console.
